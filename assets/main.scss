/*================ Media Query Mixin ================*/
@mixin mq($mq) {
    $breakpoint-found: false;

    @each $breakpoint in $grid-breakpoints {
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @if $mq == $name and $declaration {
            $breakpoint-found: true;

            @media only screen and #{$declaration} {
                @content;
            }
        }
    }

    @if $breakpoint-found == false {
        @warn 'Breakpoint "#{$mq}" does not exist';
    }
}

/*================ Responsive Show/Hide Helper ================*/
@mixin responsive-display-helper($grid-breakpoint-type: '') {
    // sass-lint:disable no-important
    .#{$grid-breakpoint-type}show {
        display: block !important;
    }

    .#{$grid-breakpoint-type}hide {
        display: none !important;
    }
}


/*================ Responsive Text Alignment Helper ================*/
@mixin responsive-text-align-helper($grid-breakpoint-type: '') {
    // sass-lint:disable no-important
    .#{$grid-breakpoint-type}text-left {
        text-align: left !important;
    }

    .#{$grid-breakpoint-type}text-right {
        text-align: right !important;
    }

    .#{$grid-breakpoint-type}text-center {
        text-align: center !important;
    }
}

@mixin clearfix() {
    &::after {
        content: '';
        display: table;
        clear: both;
    }

    // sass-lint:disable no-misspelled-properties
    *zoom: 1;
}


/*============================================================================
    Grid Breakpoints and Class Names
        - Do not change the variable names
        - $grid-narrow is based on a Shopify breakpoint for checkout buttons
==============================================================================*/
$grid-narrow: 500px;
$grid-medium: 750px;
$grid-large: 990px;
$grid-ex-large:1200px;
$grid-widescreen: 1400px;
$grid-gutter: 30px;
$grid-gutter-mobile: 22px;

$narrow: 'narrow';
$not-narrow: 'not-narrow';
$small: 'small';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$ex-large: 'ex-large';
$ex-large-up: 'ex-large-up';
$widescreen: 'widescreen';

/*============================================================================
    Generate breakpoint-specific column widths and push classes
        - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);
        - Default is no push classes
==============================================================================*/
$grid-breakpoint-has-widths: ($narrow, $not-narrow, $small, $medium-up, $medium, $medium-down, $large, $large-up, $large-down, $ex-large, $ex-large-up);
$grid-breakpoint-has-push: $grid-breakpoint-has-widths;



/*============================================================================
    #Grid
==============================================================================*/

// The `$grid-breakpoints` list is used to build our media queries.
// You can use these in the mq mixin.
$grid-breakpoints: (
    $narrow '(max-width: #{$grid-narrow})',
    $not-narrow '(min-width: #{$grid-narrow + 1}) and (max-width: #{$grid-medium - 1})',
    $small '(max-width: #{$grid-medium - 1})',
    $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
    $medium-down '(max-width: #{$grid-large - 1})',
    $medium-up '(min-width: #{$grid-medium})',
    $large '(min-width: #{$grid-large}) and (max-width: #{$grid-ex-large - 1})',
    $large-down '(max-width: #{$grid-ex-large - 1})',
    $large-up '(min-width: #{$grid-large})',
    $ex-large '(min-width: #{$grid-ex-large}) and (max-width: #{$grid-widescreen - 1})',
    $ex-large-up '(min-width: #{$grid-ex-large})',
    $widescreen '(min-width: #{$grid-widescreen})'
);


/*============================================================================
    Grid Setup
        1. Allow the grid system to be used on lists.
        2. Remove any margins and paddings that might affect the grid system.
        3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/

// Allows a repetion of the base grid settings
%grid-vars {
    --base-gutter                           : 30px;
    
    --base-gutter--double                   : calc( var(--base-gutter) * 2 );
    --base-gutter--trip                     : calc( var(--base-gutter) * 3 );
    --base-gutter--quad                     : calc( var(--base-gutter) * 4 );
  
    --base-gutter--half                     : calc( var(--base-gutter) / 2 );
    --base-gutter--quarter                  : calc( var(--base-gutter) / 4 );

    --grid-gutter                           : var(--base-gutter);
    --grid-gutter--mobile                   : var(--base-gutter--half);
    --grid-gutter--neg                      : calc(var(--grid-gutter) * -1);
}

// Gives access to whole site
:root {
    @extend %grid-vars;
}


.grid {
    @extend %grid-vars;

    @include clearfix();
    list-style: none;
    margin: 0;
    padding: 0;
    margin-left: var(--grid-gutter--neg);
    font-size:0;
    @include mq($small) {
        --grid-gutter: var(--grid-gutter--mobile);
    }
    & > .grid__item {
        padding-left: var(--grid-gutter);
        display:inline-block;
        font-size:16px;
        &[class*="--push"] {
            position: relative;
        }
    }
    
}
.grid.no_gutter,
.grid_no_gutter {
    @include clearfix();
    list-style: none;
    margin: 0;
    padding: 0;
    font-size:0;
    & > .grid__item {
        display:inline-block;
        font-size:16px;
    }
}
.grid__item {
    width: 100%;
    // float: initial;
    display:inline-block;
    font-size:16px;
    &[class*="--push"] {
        position: relative;
    }
}

.grid,
.grid_no_gutter {
    .grid__item {
        vertical-align: top;
    }
    &.vert-top {
        & > .grid__item {
            vertical-align: top;
        }
    }
    &.vert-mid,
    &.vert-middle {
        & > .grid__item {
            vertical-align: middle;
        }
    }
    &.vert-bot,
    &.vert-bottom {
        & > .grid__item {
            vertical-align: bottom;
        }
    }

    &.half_gutter {
        --grid-gutter: var(--base-gutter--half);
    }
    &.double_gutter {
        --grid-gutter: var(--base-gutter--double);
    }

    &.grid_margin_bottom,
    &.grid_bottom_margin {
        margin-bottom: var(--grid-gutter--neg);
        & > .grid__item {
            margin-bottom: var(--grid-gutter);
        }
    }
}

/*============================================================================
    Reversed grids allow you to structure your source in the opposite
    order to how your rendered layout will appear.
==============================================================================*/
.grid--rev {
    direction: rtl;
    text-align: left;

    > .grid__item {
        direction: ltr;
        text-align: left;
        float: right;
    }
}

.page-width {
    @extend %grid-vars;

    width: 100%;
    max-width: $grid-widescreen;
    margin: 0 auto;

    &.with-padding {
        padding: 0 var(--grid-gutter--mobile);
        @include mq($medium-up) {
            padding: 0 var(--grid-gutter);
        }
    }
}


/*============================================================================
    Grid Columns
        - Create width classes, prepended by the breakpoint name.
==============================================================================*/
// sass-lint:disable brace-style empty-line-between-blocks
@mixin grid-column-generator($grid-breakpoint-type: '') {
    /* Whole */
    .#{$grid-breakpoint-type}one-whole { width: 100%; }

    /* Halves */
    .#{$grid-breakpoint-type}one-half { width: percentage(1 / 2); }

    /* Thirds */
    .#{$grid-breakpoint-type}one-third { width: percentage(1 / 3); }
    .#{$grid-breakpoint-type}two-thirds { width: percentage(2 / 3); }

    /* Quarters */
    .#{$grid-breakpoint-type}one-quarter { width: percentage(1 / 4); }
    .#{$grid-breakpoint-type}two-quarters { width: percentage(2 / 4); }
    .#{$grid-breakpoint-type}three-quarters { width: percentage(3 / 4); }

    /* Fifths */
    .#{$grid-breakpoint-type}one-fifth { width: percentage(1 / 5); }
    .#{$grid-breakpoint-type}two-fifths { width: percentage(2 / 5); }
    .#{$grid-breakpoint-type}three-fifths { width: percentage(3 / 5); }
    .#{$grid-breakpoint-type}four-fifths { width: percentage(4 / 5); }

    /* Sixths */
    .#{$grid-breakpoint-type}one-sixth { width: percentage(1 / 6); }
    .#{$grid-breakpoint-type}two-sixths { width: percentage(2 / 6); }
    .#{$grid-breakpoint-type}three-sixths { width: percentage(3 / 6); }
    .#{$grid-breakpoint-type}four-sixths { width: percentage(4 / 6); }
    .#{$grid-breakpoint-type}five-sixths { width: percentage(5 / 6); }

    /* Sevenths */
    .#{$grid-breakpoint-type}one-seventh { width: percentage(1 / 7); }
    .#{$grid-breakpoint-type}two-sevenths { width: percentage(2 / 7); }
    .#{$grid-breakpoint-type}three-sevenths { width: percentage(3 / 7); }
    .#{$grid-breakpoint-type}four-sevenths { width: percentage(4 / 7); }
    .#{$grid-breakpoint-type}five-sevenths { width: percentage(5 / 7); }
    .#{$grid-breakpoint-type}five-sevenths { width: percentage(6 / 7); }

    /* Eighths */
    .#{$grid-breakpoint-type}one-eighth { width: percentage(1 / 8); }
    .#{$grid-breakpoint-type}two-eighths { width: percentage(2 / 8); }
    .#{$grid-breakpoint-type}three-eighths { width: percentage(3 / 8); }
    .#{$grid-breakpoint-type}four-eighths { width: percentage(4 / 8); }
    .#{$grid-breakpoint-type}five-eighths { width: percentage(5 / 8); }
    .#{$grid-breakpoint-type}six-eighths { width: percentage(6 / 8); }
    .#{$grid-breakpoint-type}seven-eighths { width: percentage(7 / 8); }

    /* Ninths */
    .#{$grid-breakpoint-type}one-ninth { width: percentage(1 / 9); }
    .#{$grid-breakpoint-type}two-ninths { width: percentage(2 / 9); }
    .#{$grid-breakpoint-type}three-ninths { width: percentage(3 / 9); }
    .#{$grid-breakpoint-type}four-ninths { width: percentage(4 / 9); }
    .#{$grid-breakpoint-type}five-ninths { width: percentage(5 / 9); }
    .#{$grid-breakpoint-type}six-ninths { width: percentage(6 / 9); }
    .#{$grid-breakpoint-type}seven-ninths { width: percentage(7 / 9); }
    .#{$grid-breakpoint-type}seven-ninths { width: percentage(8 / 9); }

    /* Tenths */
    .#{$grid-breakpoint-type}one-tenth { width: percentage(1 / 10); }
    .#{$grid-breakpoint-type}two-tenths { width: percentage(2 / 10); }
    .#{$grid-breakpoint-type}three-tenths { width: percentage(3 / 10); }
    .#{$grid-breakpoint-type}four-tenths { width: percentage(4 / 10); }
    .#{$grid-breakpoint-type}five-tenths { width: percentage(5 / 10); }
    .#{$grid-breakpoint-type}six-tenths { width: percentage(6 / 10); }
    .#{$grid-breakpoint-type}seven-tenths { width: percentage(7 / 10); }
    .#{$grid-breakpoint-type}eight-tenths { width: percentage(8 / 10); }
    .#{$grid-breakpoint-type}nine-tenths { width: percentage(9 / 10); }

    /* Elevenths */
    .#{$grid-breakpoint-type}one-eleventh { width: percentage(1 / 11); }
    .#{$grid-breakpoint-type}two-elevenths { width: percentage(2 / 11); }
    .#{$grid-breakpoint-type}three-elevenths { width: percentage(3 / 11); }
    .#{$grid-breakpoint-type}four-elevenths { width: percentage(4 / 11); }
    .#{$grid-breakpoint-type}five-elevenths { width: percentage(5 / 11); }
    .#{$grid-breakpoint-type}six-elevenths { width: percentage(6 / 11); }
    .#{$grid-breakpoint-type}seven-elevenths { width: percentage(7 / 11); }
    .#{$grid-breakpoint-type}eight-elevenths { width: percentage(8 / 11); }
    .#{$grid-breakpoint-type}nine-elevenths { width: percentage(9 / 11); }
    .#{$grid-breakpoint-type}nine-elevenths { width: percentage(10 / 11); }

    /* Twelfths */
    .#{$grid-breakpoint-type}one-twelfth { width: percentage(1 / 12); }
    .#{$grid-breakpoint-type}two-twelfths { width: percentage(2 / 12); }
    .#{$grid-breakpoint-type}three-twelfths { width: percentage(3 / 12); }
    .#{$grid-breakpoint-type}four-twelfths { width: percentage(4 / 12); }
    .#{$grid-breakpoint-type}five-twelfths { width: percentage(5 / 12); }
    .#{$grid-breakpoint-type}six-twelfths { width: percentage(6 / 12); }
    .#{$grid-breakpoint-type}seven-twelfths { width: percentage(7 / 12); }
    .#{$grid-breakpoint-type}eight-twelfths { width: percentage(8 / 12); }
    .#{$grid-breakpoint-type}nine-twelfths { width: percentage(9 / 12); }
    .#{$grid-breakpoint-type}ten-twelfths { width: percentage(10 / 12); }
    .#{$grid-breakpoint-type}eleven-twelfths { width: percentage(11 / 12); }
}

/*================ Grid push classes ================*/
@mixin grid-push-generator($grid-breakpoint-type: '') {
    /* Halves */
    .#{$grid-breakpoint-type}push-one-half { left: percentage(1 / 2); }

    /* Thirds */
    .#{$grid-breakpoint-type}push-one-third { left: percentage(1 / 3); }
    .#{$grid-breakpoint-type}push-two-thirds { left: percentage(2 / 3); }

    /* Quarters */
    .#{$grid-breakpoint-type}push-one-quarter { left: percentage(1 / 4); }
    .#{$grid-breakpoint-type}push-two-quarters { left: percentage(2 / 4); }
    .#{$grid-breakpoint-type}push-three-quarters { left: percentage(3 / 4); }

    /* Fifths */
    .#{$grid-breakpoint-type}push-one-fifth { left: percentage(1 / 5); }
    .#{$grid-breakpoint-type}push-two-fifths { left: percentage(2 / 5); }
    .#{$grid-breakpoint-type}push-three-fifths { left: percentage(3 / 5); }
    .#{$grid-breakpoint-type}push-four-fifths { left: percentage(4 / 5); }

    /* Sixths */
    .#{$grid-breakpoint-type}push-one-sixth { left: percentage(1 / 6); }
    .#{$grid-breakpoint-type}push-two-sixths { left: percentage(2 / 6); }
    .#{$grid-breakpoint-type}push-three-sixths { left: percentage(3 / 6); }
    .#{$grid-breakpoint-type}push-four-sixths { left: percentage(4 / 6); }
    .#{$grid-breakpoint-type}push-five-sixths { left: percentage(5 / 6); }

    /* Eighths */
    .#{$grid-breakpoint-type}push-one-eighth { left: percentage(1 / 8); }
    .#{$grid-breakpoint-type}push-two-eighths { left: percentage(2 / 8); }
    .#{$grid-breakpoint-type}push-three-eighths { left: percentage(3 / 8); }
    .#{$grid-breakpoint-type}push-four-eighths { left: percentage(4 / 8); }
    .#{$grid-breakpoint-type}push-five-eighths { left: percentage(5 / 8); }
    .#{$grid-breakpoint-type}push-six-eighths { left: percentage(6 / 8); }
    .#{$grid-breakpoint-type}push-seven-eighths { left: percentage(7 / 8); }

    /* Tenths */
    .#{$grid-breakpoint-type}push-one-tenth { left: percentage(1 / 10); }
    .#{$grid-breakpoint-type}push-two-tenths { left: percentage(2 / 10); }
    .#{$grid-breakpoint-type}push-three-tenths { left: percentage(3 / 10); }
    .#{$grid-breakpoint-type}push-four-tenths { left: percentage(4 / 10); }
    .#{$grid-breakpoint-type}push-five-tenths { left: percentage(5 / 10); }
    .#{$grid-breakpoint-type}push-six-tenths { left: percentage(6 / 10); }
    .#{$grid-breakpoint-type}push-seven-tenths { left: percentage(7 / 10); }
    .#{$grid-breakpoint-type}push-eight-tenths { left: percentage(8 / 10); }
    .#{$grid-breakpoint-type}push-nine-tenths { left: percentage(9 / 10); }

    /* Twelfths */
    .#{$grid-breakpoint-type}push-one-twelfth { left: percentage(1 / 12); }
    .#{$grid-breakpoint-type}push-two-twelfths { left: percentage(2 / 12); }
    .#{$grid-breakpoint-type}push-three-twelfths { left: percentage(3 / 12); }
    .#{$grid-breakpoint-type}push-four-twelfths { left: percentage(4 / 12); }
    .#{$grid-breakpoint-type}push-five-twelfths { left: percentage(5 / 12); }
    .#{$grid-breakpoint-type}push-six-twelfths { left: percentage(6 / 12); }
    .#{$grid-breakpoint-type}push-seven-twelfths { left: percentage(7 / 12); }
    .#{$grid-breakpoint-type}push-eight-twelfths { left: percentage(8 / 12); }
    .#{$grid-breakpoint-type}push-nine-twelfths { left: percentage(9 / 12); }
    .#{$grid-breakpoint-type}push-ten-twelfths { left: percentage(10 / 12); }
    .#{$grid-breakpoint-type}push-eleven-twelfths { left: percentage(11 / 12); }
}

/*================ Clearfix helper on uniform grids ================*/
@mixin grid-uniform-clearfix($grid-breakpoint-type: '') {
    .grid--uniform {
        .#{$grid-breakpoint-type}one-half:nth-child(2n+1),
        .#{$grid-breakpoint-type}one-third:nth-child(3n+1),
        .#{$grid-breakpoint-type}one-quarter:nth-child(4n+1),
        .#{$grid-breakpoint-type}one-fifth:nth-child(5n+1),
        .#{$grid-breakpoint-type}one-sixth:nth-child(6n+1),
        .#{$grid-breakpoint-type}two-sixths:nth-child(3n+1),
        .#{$grid-breakpoint-type}three-sixths:nth-child(2n+1),
        .#{$grid-breakpoint-type}one-eighth:nth-child(8n+1),
        .#{$grid-breakpoint-type}two-eighths:nth-child(4n+1),
        .#{$grid-breakpoint-type}four-eighths:nth-child(2n+1),
        .#{$grid-breakpoint-type}five-tenths:nth-child(2n+1),
        .#{$grid-breakpoint-type}one-twelfth:nth-child(12n+1),
        .#{$grid-breakpoint-type}two-twelfths:nth-child(6n+1),
        .#{$grid-breakpoint-type}three-twelfths:nth-child(4n+1),
        .#{$grid-breakpoint-type}four-twelfths:nth-child(3n+1),
        .#{$grid-breakpoint-type}six-twelfths:nth-child(2n+1) { clear: both; }
    }
}

// sass-lint:enable brace-style empty-line-between-blocks

/*================ Build Base Grid Classes ================*/
@include grid-column-generator();
@include responsive-display-helper();
@include responsive-text-align-helper();

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $grid-breakpoint-has-widths {
    @include mq($breakpoint) {
        @include grid-column-generator('#{$breakpoint}--');
        @include grid-uniform-clearfix('#{$breakpoint}--');
        @include responsive-display-helper('#{$breakpoint}--');
        @include responsive-text-align-helper('#{$breakpoint}--');
    }
}

/*================ Build Grid Push Classes ================*/
@each $breakpoint in $grid-breakpoint-has-push {
    @include mq($breakpoint) {
        @include grid-push-generator('#{$breakpoint}--');
    }
}










